

;;;;;;;;;;;;
;; Morphological indicators
;;;;;;;;;;;;

;;
;  - integrated local density
;  - Moran
;  - average distance between individuals
;  - rank/size slope
;  ...
; 
;  -> implement 7 indicators of Florent ?


;;
; Setup of external indicators computation.
;
;   setup R session, saves temporary raster
;
to setup-indicator-computation
  
  ;; save density data in temp raster file
  ; needs first to set a default coordinate system
  ;gis:set-coordinate-system "default.prj"  ;; does not work
  ; load a dataset inside void variable
  gis:apply-raster gis:load-dataset "data/england.asc" sp-raster-var
  gis:store-dataset gis:patch-dataset sp-density "temp_raster_dens.asc"
  gis:store-dataset gis:patch-dataset sp-occupants "temp_raster_pop.asc"
  
  ;; setup r session, source functions
  let pathroot (word pathdir:get-current pathdir:get-separator)
  ;r:eval (word "setwd(\"" pathroot "\")")
  ; connect with rserve
  carefully[
    rserve:init 6311 "localhost"
  ][output-print error-message]
  
  ;show (word "Evaluating " "source('"pathroot "morpho.R',chdir=TRUE)")
  rserve:eval (word "source('"pathroot "morpho.R',chdir=TRUE)")
  
  
end


to-report int-local-density
  
  
end

to compute-indicators
  
  ask patches with [sp-occupants < 1] [set sp-occupants 0]
  
  output-print (word "moran = " moran-index)
  output-print (word "distance = " average-distance-individuals)
  output-print (word "slope = " rank-size-slope)
  output-print (word "rsquared = " rank-size-rsquared)
  output-print (word "entropy = " entropy)
end


;;
; Moran index for densities
;
;  Computed patch by patch - in \theta(N(N-1)/2).
;  Requires setup before.
to-report moran-index
  
  report morphology:moran 0
  
  ;report rserve:get "moranIndex()"
  
  ;; direct computation is very slow (complexity - ask, distance)
  ; external call to R primitives using matrix convolution should be a huge gain of time
  ;  -> general indicator setup setting up r extension, sourcing functions, etc
  ;     then calls specific functions ?
  ;
  
  
;  let patch-list to-list patches
;  
;  let s 0 let w 0 let norm-factor 0 let n count patches
;  let rem-list but-first patch-list
;  let m mean [sp-density] of patches
;  
;  foreach but-last patch-list [
;    let patch-i ?
;    foreach rem-list [
;      let patch-j ?
;      set w w + (1 / [distance patch-j] of patch-i)
;      ;ask patch-i [set w w + (1 / distance patch-j) set s s + (((sp-density - m)*([sp-density] of patch-j - m))/(1 / distance patch-j))]
;    ] 
;    set norm-factor norm-factor + (([sp-density] of patch-i - m) ^ 2)
;    set rem-list but-first rem-list
;  ]
;  report (n * (n - 1) / 2 ) * s / (w * norm-factor)
  
end


; heuristic mean
to-report average-distance-individuals
  
  report morphology:distance 0
  
;  let pop-patches to-list max-n-of (min list ((count patches) / 30) count patches with [sp-occupants > 1]) patches [sp-occupants]
;  let s 0 let o 0
;  foreach pop-patches [
;    let p1 ?
;    foreach pop-patches [
;      ask ? [set s s + ((sp-occupants + [sp-occupants] of p1) * distance p1) set o o + (sp-occupants + [sp-occupants] of p1)] 
;    ]
;    
;  ]
;  
;  report s / (o * sqrt (world-width ^ 2 + world-height ^ 2))
 ; report rserve:get "averageDistance()"
end


to-report rank-size-slope
  report item 0 morphology:slope 1
  
  ;report item 0 rserve:get "rankSizeSlope()"
end

to-report rank-size-rsquared
  
  report item 1 morphology:slope 1
  
  ;report item 1 rserve:get "rankSizeSlope()"
end

to-report entropy
  
  report morphology:entropy 0
  
  ;report rserve:get "entropy()"
end


;; binding of rserve closing, to be able to shut it down in last openmole netlogo output call.
to-report close-rserve
  let res 0.0
  carefully [
    rserve:close set res 1.0
  ][output-print error-message]
  report res
end



