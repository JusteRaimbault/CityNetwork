
// basic openmole workflow with netlogo model

// varying parameters

val beta = Val[Double]
val lambda = Val[Double]
val replication = Val[Int]


// exploration task

val exploration =
  ExplorationTask(
    (beta in (10.0 to 20.0 by 10.0)) x
    (lambda in (0.0 to 1.0 by 0.5)) x
    (replication in (UniformDistribution[Int]() take 2))
  )


//define netlogo task

val res=Val[Double]

val cmds = List(
  "setup-exp ${lambda} ${beta}",
  "go-exp")

val model = NetLogo5Task("/Users/Juste/Documents/ComplexSystems/CityNetwork/Models/OpenMole/Test/test.nlogo",cmds,true) set (
  inputs += (lambda, beta),
  netLogoOutputs += ("res", res)
)

// output
val h = ToStringHook()


logger.level("FINE")

// environment
val env = LocalEnvironment(3)

//private key auth
//val auth =
//  PrivateKey(
//    "",
//    "",
//    encrypted,
//    "")

//println(auth.toString())

//val env =SSHEnvironment("","",2,22)
//println(env.credential)
//env.credential = auth
//val conn = env.connect

val exec = exploration -< (model on env hook h) start

exec.waitUntilEnded



