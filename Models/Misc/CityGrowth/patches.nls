
;;
; patches
;

;;
; patch procedure to grow population
to grow
  
  ;; fixed growth rate
  if growth-mechanism = "fixed-rate" [
    ask max-n-of growth-rate patches [utility] [set population population + 1]
  ]
  
  if growth-mechanism = "endogenous" [
    ask patches [
       set population population + growth-quantity
      ; gibrat growth -> reinforcment
      ;if population = 0 [set population population + growth-quantity]
      ;set population population * (1 + ln (1 + growth-quantity))
    ]
  ] 
end


to-report growth-quantity
  ifelse max-utility = 0 [report 0][
    report (max (list 0 random-normal ((utility - min-utility) / (max-utility - min-utility)) perturbation-width)) ^ growth-exponent
    ;report utility
  ]
end


to-report get-patch-utility
  let density-value 0 if max-density != 0 [set density-value surrounding-density / max-density]
  report (distance-weight * exp (-2 * distance patch 0 0 / max-pxcor)) - (density-weight * density-value)
end


to update-patches-variables
  update-local-densities
  update-patches-utilities
end


;;
;  need for this function a convol 2D with patch variables
to update-local-densities
  ask patches [
    let p patches in-radius neigh-radius
    set surrounding-density sum [population] of p / count p
  ]
  set max-density max [surrounding-density] of patches
end

to update-patches-utilities
  ask patches [
    set utility get-patch-utility 
  ]
  set max-utility max [utility] of patches set min-utility min [utility] of patches
end