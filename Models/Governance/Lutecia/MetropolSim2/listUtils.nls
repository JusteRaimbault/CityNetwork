

;;;;;
;; Local list utilities
;;;;;



;;
; Report a matrix full (list<list<Int>>) of 1
;  @param n nrows
;  @param p ncols
;  @report List_n<List_p<Int>>
;;
to-report list1 [n p]
  ; original call : ;let list1 [[1 1 1 1][1 1 1 1][1 1 1 1][1 1 1 1]]
  report rep (rep 1 p) n
end

to-report multiplyList [liste k]
  let i 0
  let kliste []
  while [i < length liste] [
    set kliste lput (k * item i liste) kliste
    set i i + 1
  ]
  
  report kliste

end





to-report multiplyListList [liste k]
let i 0
let kliste []
let tempListe []
while [i < length liste] [
  set kliste lput [] kliste
  set i i + 1
]
let j 0

set i 0
while [i < length liste] [
  set j 0
  while [j < length item i liste] [
    
    set tempListe item i kliste
    set tempListe lput (k * item j item i liste) tempListe
    set kliste replace-item i kliste tempListe
    set j j + 1
  ]
  set i i + 1
]

report kliste

end

