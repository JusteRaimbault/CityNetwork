
;;;;;;;;;;;;;;
;; luti
;;;;;;;;;;;;;;



;;
; compute accessibilities, utilities and relocates actives and employments
to luti:luti
  
  output-print "luti module"
  
  ;; compute acc and utilities
  compute-patches-variables
  
  ;; update ext
  luti:update-externalities
  
  
  ;; relocate A and E
  luti:relocate
  
  ;; update wealths
  luti:update-wealth
  
end


;;
; Relocate employments and actives
;   given a DC model 
to luti:relocate

  if evolve-landuse? [

    output-print "... relocalization"
  
    ; discrete choice model following utilities for employments and actives
    let actives-number sum [actives] of patches let employments-number sum [employments] of patches
    let a-dc-norm-factor sum [exp (beta-discrete-choices * a-utility)] of patches
    let e-dc-norm-factor sum [exp (beta-discrete-choices * e-utility)] of patches
  
    set diff-actives 0 set diff-employments 0 set rel-diff-actives 0 set rel-diff-employments 0
  
    ask patches [
      let prev-a actives let prev-e employments
      set actives ((1 - relocation-rate)* actives) + (relocation-rate * actives-number * exp (beta-discrete-choices * a-utility) / a-dc-norm-factor)
      set employments ((1 - relocation-rate)* employments) + (relocation-rate * employments-number * exp (beta-discrete-choices * e-utility) / e-dc-norm-factor)
      set diff-actives diff-actives + abs (prev-a - actives) set diff-employments diff-employments + abs (prev-e - employments)
      set rel-diff-actives rel-diff-actives + ((abs (prev-a - actives)) / actives) set rel-diff-employments rel-diff-employments + ((abs (prev-e - employments))/ employments)
      ; update global lists
      set patches-employments replace-item number patches-employments employments
      set patches-actives replace-item number patches-actives actives
    ]
  
  ]
  
end



;;
; Aggregate wealth at mayor level : sum of employments (?)
to luti:update-wealth
  ask mayors [set wealth 0]
  ask patches [
    ask governing-mayor [set wealth wealth + [employments] of myself]
    ask regional-authority [set wealth wealth + [employments] of myself]
  ]
  
end


;;
; update employments in external facilities, following an exponential growth
; 
to luti:update-externalities
  
  if with-externalities? [
    
    foreach external-facility [
       ask patch-with-number ? [
         set employments ext-growth-factor * employments * current-accessibility / initial-max-acc
       ]
    ]
    
  ]
  
end
  
  
  
  

  
  